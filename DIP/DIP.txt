Dependency Inversion Principle

ამ პრინციპის შესაბამისად მაღალი დონის მოდულები არ უნდა იყვნენ დამოკიდებულნი
დაბალი დონის მოდულებზე, არამედ ორივე უნდა იყოს დამოკიდებული აბსტრაქციაზე.

ამ პრინციპის ცხოვრებისეული მაგალითები:


    მაგალითი 1. მაგალითად ტელევიზორის გამოყენება არ უნდა იყოს მხოლოდ ერთ  მოწყობილობაზე
    დამოკიდებული, ანუ პულტზე. ჩვენ თუ დაგვჭირდება ტელევიზორის გამოყენება, არხების შეცვლა 
    უნდა შეიძლებოდეს როგორც სმარტფონის აპლიკაციით, ასევე ჭკვიანი სახლის სისტემის გამოყენებით,
    რომელიც დაკავშირებული იქნება პირობითად ხმოვან ბრძანებებზე amazon alexa-თან. ჩვენ უნდა გვქონდეს 
    RemoteControll კლასი, რომელიც დააიმპლემენტირებს როგორც პულტის ცალკე ინტერფეისს, ასევე 
    სმატფონისა და ამაზონ ალექსას კონტროლის ინტერფეისებს. თუ შემდეგში ახალი მეთოდის დამატება 
    დაგვჭირდება უბრალოდ შევქმნით მას და იგი იქნება კვლავ RemoteControll-ის იმპლემენტატორი. 

    მაგალითი2. შემდეგ მაგალითად შეიძლება მოვიყვანოთ ქართული რესტორნის მაგალითზე, სადაც მენიუში
    გვექნება მხოლოდ იმერული ხაჭაპური ეს კი DSP-ის დარღვევაა. როდესაც დაგვჭირდება აჭარული ან მეგრული 
    ხაჭაპურის დამატება მენიუში საჭირო იქნება ყველაფრის შეცვლა, როცა შეგვეძლო გვქონოდა მთავარი ინტერფეისი:
    Khachapuri კონტრაქტით Prepare(). შემდეგ კი თითოეული ხაჭაპურის ტიპი დააიმპლემენტირებდა აღნიშნულ
    ინტერფეისს. 